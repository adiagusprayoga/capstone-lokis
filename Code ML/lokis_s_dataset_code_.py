# -*- coding: utf-8 -*-
"""fix_code_lokis's_dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SjdCIMG9MkPTl_Omyjx-IwIPJo2amt-k

## Code mengambil variabel dataset dengan "query"
"""

!pip install requests

import requests
import json
import pandas as pd
from google.colab import drive
import time
import shutil

def get_places(api_key, query, max_results=200):
    places = []
    next_page_token = None
    total_results = 0

    while total_results < max_results:
        url = f'https://maps.googleapis.com/maps/api/place/textsearch/json'
        params = {
            'query': query,
            'key': api_key,
            'pagetoken': next_page_token
        }

        response = requests.get(url, params=params)

        if response.status_code == 200:
            result = response.json()

            for place in result.get('results', []):
                place_details = {
                    "name": place.get('name', ''),
                    "category": place.get('types', [''])[0],
                    "address": place.get('formatted_address', ''),
                    "place_id": place.get('place_id', ''),
                    "rating": place.get('rating', 0.0),
                }
                places.append(place_details)
                total_results += 1

            next_page_token = result.get('next_page_token')

            if not next_page_token or total_results >= max_results:
                break
        else:
            print(f'Error: {response.status_code}')
            print(response.text)
            break

        time.sleep(2)

    return places

def save_to_google_drive(data, filename='output.csv'):
    df = pd.DataFrame(data)
    df.to_csv(filename, index=False)
    drive.mount('/content/drive')
    shutil.move(filename, f'/content/drive/My Drive/{filename}')

def main():
    # Ganti 'YOUR_API_KEY' dengan kunci API Google Places Anda
    api_key = 'AIzaSyCkwLjv4XhHvao0gtyd7lsAv5crMrqpTUE'  # Ganti dengan kunci API yang valid

    # Ganti 'query' dengan kata kunci pencarian Anda, misalnya 'tourist attractions in Jakarta'
    query = 'large park for recreation in jakarta, indonesia'

    # Mendapatkan tempat wisata di Bogor menggunakan API (maksimal 200)
    bogor_places = get_places(api_key, query, max_results=200)

    # Menyimpan hasil ke Google Drive
    save_to_google_drive(bogor_places, filename='output.csv')

    # Menampilkan hasil
    print(json.dumps(bogor_places, indent=2))
    print("Data telah disimpan ke Google Drive.")

if __name__ == "__main__":
    main()

import requests
import json
import pandas as pd
from google.colab import drive
import time
import shutil  # Tambahkan import ini

def get_places(api_key, query, max_results=200):
    places = []
    next_page_token = None
    total_results = 0

    while total_results < max_results:
        url = f'https://maps.googleapis.com/maps/api/place/textsearch/json?query={query}&key={api_key}'

        if next_page_token:
            url += f'&pagetoken={next_page_token}'

        response = requests.get(url)

        if response.status_code == 200:
            result = response.json()

            for place in result.get('results', []):
                place_details = {
                    "name": place.get('name', ''),
                    "category": place.get('types', [''])[0],
                    "address": place.get('formatted_address', ''),
                    "place_id": place.get('place_id', ''),
                    "rating": place.get('rating', 0.0),
                }
                places.append(place_details)
                total_results += 1

            next_page_token = result.get('next_page_token')

            time.sleep(2)

            if not next_page_token or total_results >= max_results:
                break
        else:
            print(f'Error: {response.status_code}')
            print(response.text)
            break

    return places

def save_to_google_drive(data, filename='output.csv'):
    df = pd.DataFrame(data)
    df.to_csv(filename, index=False)
    drive.mount('/content/drive')
    shutil.move(filename, '/content/drive/My Drive/' + filename)

api_key = 'AIzaSyCkwLjv4XhHvao0gtyd7lsAv5crMrqpTUE'
query = 'wisata in Depok, indonesia'

jakarta_places = get_places(api_key, query, max_results=200)

save_to_google_drive(jakarta_places, filename='output.csv')

print(json.dumps(jakarta_places, indent=2))
print("Data telah disimpan ke Google Drive.")

import requests
import json
import pandas as pd
from google.colab import drive
import time
import shutil  # Tambahkan import ini

def get_places(api_key, query, max_results=200):
    places = []
    next_page_token = None
    total_results = 0

    while total_results < max_results:
        url = f'https://maps.googleapis.com/maps/api/place/textsearch/json?query={query}&key={api_key}'

        if next_page_token:
            url += f'&pagetoken={next_page_token}'

        response = requests.get(url)

        if response.status_code == 200:
            result = response.json()

            for place in result.get('results', []):
                place_details = {
                    "name": place.get('name', ''),
                    "category": place.get('types', [''])[0],
                    "address": place.get('formatted_address', ''),
                    "place_id": place.get('place_id', ''),
                    "rating": place.get('rating', 0.0),
                }
                places.append(place_details)
                total_results += 1

            next_page_token = result.get('next_page_token')

            time.sleep(2)

            if not next_page_token or total_results >= max_results:
                break
        else:
            print(f'Error: {response.status_code}')
            print(response.text)
            break

    return places

def save_to_google_drive(data, filename='output.csv'):
    df = pd.DataFrame(data)
    df.to_csv(filename, index=False)
    drive.mount('/content/drive')
    shutil.move(filename, '/content/drive/My Drive/' + filename)

api_key = 'AIzaSyCkwLjv4XhHvao0gtyd7lsAv5crMrqpTUE'
query = 'Museum in Depok, indonesia'

jakarta_places = get_places(api_key, query, max_results=200)

save_to_google_drive(jakarta_places, filename='output.csv')

print(json.dumps(jakarta_places, indent=2))
print("Data telah disimpan ke Google Drive.")

import requests
import json
import pandas as pd
from google.colab import drive
import time
import shutil  # Tambahkan import ini

def get_places(api_key, query, max_results=200):
    places = []
    next_page_token = None
    total_results = 0

    while total_results < max_results:
        url = f'https://maps.googleapis.com/maps/api/place/textsearch/json?query={query}&key={api_key}'

        if next_page_token:
            url += f'&pagetoken={next_page_token}'

        response = requests.get(url)

        if response.status_code == 200:
            result = response.json()

            for place in result.get('results', []):
                place_details = {
                    "name": place.get('name', ''),
                    "category": place.get('types', [''])[0],
                    "address": place.get('formatted_address', ''),
                    "place_id": place.get('place_id', ''),
                    "rating": place.get('rating', 0.0),
                }
                places.append(place_details)
                total_results += 1

            next_page_token = result.get('next_page_token')

            time.sleep(2)

            if not next_page_token or total_results >= max_results:
                break
        else:
            print(f'Error: {response.status_code}')
            print(response.text)
            break

    return places

def save_to_google_drive(data, filename='output.csv'):
    df = pd.DataFrame(data)
    df.to_csv(filename, index=False)
    drive.mount('/content/drive')
    shutil.move(filename, '/content/drive/My Drive/' + filename)

api_key = 'AIzaSyCkwLjv4XhHvao0gtyd7lsAv5crMrqpTUE'
query = 'Museum in Bekasi, indonesia'

jakarta_places = get_places(api_key, query, max_results=200)

save_to_google_drive(jakarta_places, filename='output.csv')

print(json.dumps(jakarta_places, indent=2))
print("Data telah disimpan ke Google Drive.")

import requests
import json
import pandas as pd
from google.colab import drive
import time
import shutil  # Tambahkan import ini

def get_places(api_key, query, max_results=200):
    places = []
    next_page_token = None
    total_results = 0

    while total_results < max_results:
        url = f'https://maps.googleapis.com/maps/api/place/textsearch/json?query={query}&key={api_key}'

        if next_page_token:
            url += f'&pagetoken={next_page_token}'

        response = requests.get(url)

        if response.status_code == 200:
            result = response.json()

            for place in result.get('results', []):
                place_details = {
                    "name": place.get('name', ''),
                    "category": place.get('types', [''])[0],
                    "address": place.get('formatted_address', ''),
                    "place_id": place.get('place_id', ''),
                    "rating": place.get('rating', 0.0),
                }
                places.append(place_details)
                total_results += 1

            next_page_token = result.get('next_page_token')

            time.sleep(2)

            if not next_page_token or total_results >= max_results:
                break
        else:
            print(f'Error: {response.status_code}')
            print(response.text)
            break

    return places

def save_to_google_drive(data, filename='output.csv'):
    df = pd.DataFrame(data)
    df.to_csv(filename, index=False)
    drive.mount('/content/drive')
    shutil.move(filename, '/content/drive/My Drive/' + filename)

api_key = 'AIzaSyCkwLjv4XhHvao0gtyd7lsAv5crMrqpTUE'
query = 'Wisata in Tangerang, indonesia'

jakarta_places = get_places(api_key, query, max_results=200)

save_to_google_drive(jakarta_places, filename='output.csv')

print(json.dumps(jakarta_places, indent=2))
print("Data telah disimpan ke Google Drive.")

import requests
import json
import pandas as pd
from google.colab import drive
import time
import shutil

def get_places(api_key, query, max_results=200):
    places = []
    next_page_token = None
    total_results = 0

    while total_results < max_results:
        url = f'https://maps.googleapis.com/maps/api/place/textsearch/json?query={query}&key={api_key}'

        if next_page_token:
            url += f'&pagetoken={next_page_token}'

        response = requests.get(url)

        if response.status_code == 200:
            result = response.json()

            for place in result.get('results', []):
                # Mengambil informasi waktu buka jika tersedia
                place_id = place.get('place_id', '')
                open_hours = get_open_hours(api_key, place_id)

                place_details = {
                    "name": place.get('name', ''),
                    "category": place.get('types', [''])[0],
                    "address": place.get('formatted_address', ''),
                    "place_id": place_id,
                    "rating": place.get('rating', 0.0),
                    "open_hours": open_hours,  # Menambahkan informasi waktu buka
                }
                places.append(place_details)
                total_results += 1

            next_page_token = result.get('next_page_token')

            time.sleep(2)

            if not next_page_token or total_results >= max_results:
                break
        else:
            print(f'Error: {response.status_code}')
            print(response.text)
            break

    return places

def get_open_hours(api_key, place_id):
    url = f'https://maps.googleapis.com/maps/api/place/details/json?place_id={place_id}&key={api_key}'
    response = requests.get(url)

    if response.status_code == 200:
        result = response.json()
        opening_hours = result.get('result', {}).get('opening_hours', {}).get('weekday_text', [])
        return opening_hours
    else:
        print(f'Error: {response.status_code}')
        print(response.text)
        return []

# ... (fungsi save_to_google_drive tetap sama)

api_key = 'AIzaSyCkwLjv4XhHvao0gtyd7lsAv5crMrqpTUE'
query = 'Wisata budaya Bekasi, indonesia'

jakarta_places = get_places(api_key, query, max_results=200)

save_to_google_drive(jakarta_places, filename='output.csv')

print(json.dumps(jakarta_places, indent=2))
print("Data telah disimpan ke Google Drive.")

"""## Code mengambil variabel "longitude dan latitude" di dataset"""

from google.colab import files
import pandas as pd
import requests
from google.colab import drive

# Upload CSV file from local machine to Google Colab
uploaded = files.upload()

# Read the uploaded CSV file into a Pandas DataFrame
filename = list(uploaded.keys())[0]
df = pd.read_csv(filename)

def save_to_google_drive(dataframe, filename):
    drive.mount('/content/drive')
    filepath = f'/content/drive/MyDrive/{filename}'
    dataframe.to_csv(filepath, index=False)
    print(f'Data telah disimpan ke Google Drive dengan nama file: {filename}')

def get_place_coordinates(api_key, place_id):
    url = f'https://maps.googleapis.com/maps/api/place/details/json?place_id={place_id}&key={api_key}'
    response = requests.get(url)

    if response.status_code == 200:
        result = response.json()
        geometry = result.get('result', {}).get('geometry', {})
        location = geometry.get('location', {})
        latitude = location.get('lat', None)
        longitude = location.get('lng', None)
        return latitude, longitude
    else:
        print(f'Error: {response.status_code}')
        return None

# Ganti 'YOUR_GOOGLE_PLACES_API_KEY' dengan kunci API Google Places Anda
api_key = 'AIzaSyCkwLjv4XhHvao0gtyd7lsAv5crMrqpTUE'


for index, row in df.iterrows():
    place_id = row['place_id']
    coordinates = get_place_coordinates(api_key, place_id)

    if coordinates:
        df.at[index, 'latitude'] = coordinates[0]
        df.at[index, 'longitude'] = coordinates[1]
    else:
        df.at[index, 'latitude'] = None
        df.at[index, 'longitude'] = None

# Simpan dataframe yang telah diperbarui ke file CSV
save_to_google_drive(df, 'updated_dataset.csv')